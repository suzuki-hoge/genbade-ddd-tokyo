@startuml

interface 申込ドメイン {
  プラン, 端末, メアド...
  申込()
}
class データ用申込ドメイン {
  プラン, 端末, メアド...
  申込()\n// 内部は非公開のまま、手元の情報で\n     端末有無の条件分岐や、データ用処理の呼び出しをごりごりやる
}
class 音声用申込ドメイン {
  プラン, 端末, メアド...
  申込()\n// 内部は非公開のまま、手元の情報で\n     端末有無の条件分岐や、音声用処理の呼び出しと、電話の処理をごりごりやる
}
enum プラン {
  3GB（pv001, 1, 3GBプラン）
  6GB（pv002, 2, 6GBプラン）
  ...
  create料金用Value()
  createメール用Value()
  create特典用Value()
  create電話用Value()
}
class プランValue {
  String // 各種システムが保存するためにフォーマットされた値
}
プラン -d-> プランValue : 内部の情報を使って吐き出す

データ用申込ドメイン -u-|> 申込ドメイン
音声用申込ドメイン -u-|> 申込ドメイン
interface 料金リポジトリ {
  請求(プラン, 端末...)\n// プランをプランValue にしたりとか\n     色々ごにょごにょして DB 更新をする
}
interface 電話リポジトリ {
  設定(プラン...)
}
interface 特典リポジトリ {
  データ用(プラン, 端末...)
  音声用(プラン, 端末...)
}
interface メールリポジトリ {
  端末あり(プラン, 端末, メアド...)
  端末なし(プラン, メアド...)
}
Main -d-> 申込ドメイン : よろ
データ用申込ドメイン -d--> 料金リポジトリ
データ用申込ドメイン -d--> 特典リポジトリ
データ用申込ドメイン -d--> メールリポジトリ
音声用申込ドメイン -d--> 料金リポジトリ
音声用申込ドメイン -d--> 電話リポジトリ : 絶対
音声用申込ドメイン -d--> 特典リポジトリ : 音声用
音声用申込ドメイン -d--> メールリポジトリ : どっちか

@enduml